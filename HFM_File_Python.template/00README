#
#  BEFORE LAUNCHING Python3, assuming that your environment is OK for Python3,
#  copy the executable file FileHFM_Isotropic2 into the working directory you have created
#  Its name should be FileHFM_Isotropic2.exe regardless wether it is linux or windows (rename it if needed)
#
#  if you have downloaded the HFM library into directory ../HamiltonFastMarching
#  cp ../HamiltonFastMarching/bin/FileHFM_Isotropic2 FileHFM_Isotropic2.exe
#
#
#  a simple example of an homogeneous model
############################################
#
#  launch python HFM_homo.py
#  HFM_homo.py will define the model and the source, as well as options for output data
#  It also plots the time field
#
#  It calls from def_HFM_homo.py the app. "hfm_py"
#                     this app. creates input files for the HFM executable code
#                               runs the HFM executable
#                               analyses output files and give back the time field for plotting.
#
#
#
# marmousi model and time computation
#
#  launch python HFM.py marmousi_double.bin 131 395 23.4375 -23.4375 -23.4375 1000. 1000.
#  arguments are
#         python HFM.py file name nz nx dcarre zorg xorg zsrc xsrc  (first vertical second horizontal)
#         modify the position of the source for illustration
#
#
#
# nankai model and time computation
#
#  cleaning if needed   rm input_* output_*
#  launch python HFM.py nankai_double.bin 67 365 468.75 -468.75 -468.75 1000. 100000.
#  same arguments as before
#         modify the position of the source for illustration
#
#
#  nankai model and ray computation
#
#  cleaning if needed   rm input_* output_*
#  launch python HFM_all.py nankai_double.bin 67 365 468.75 -468.75 -468.75 1000. 100000.
#  same arguments as before
#         modify the position of the source for illustration
#
#
#         receivers are described in HFM_all.py
#         modify their positions
#
#
# marmousi
#  manipulate HFM_all.py and arguments for doing the two-points ray computation 